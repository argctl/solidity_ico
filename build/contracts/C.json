{
  "contractName": "C",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_handshakes",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "gitorg_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_handshakes\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"gitorg_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/C.sol\":\"C\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/C.sol\":{\"keccak256\":\"0x8453bfd3669b479189f37f4d07c4fe1df671b12e5cec15524ec65075e7d82e57\",\"urls\":[\"bzz-raw://dc15d15f81537374153a0998a75efaddb29e4ec819e3a40c424d9ca93f461ae0\",\"dweb:/ipfs/QmXAFk5YcJgr4kvejAeSV2uEAEqrj1q818219v5b1t73nw\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600e575f80fd5b5060405161010c38038061010c8339818101604052810190602e9190608b565b505060c2565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f605f826038565b9050919050565b606d816057565b81146076575f80fd5b50565b5f815190506085816066565b92915050565b5f8060408385031215609e57609d6034565b5b5f60a9858286016079565b925050602060b8858286016079565b9150509250929050565b603e806100ce5f395ff3fe60806040525f80fdfea2646970667358221220026c925b4b311cc24b844543f9f50795907d6f595dd5d10c3e145ea2aaa2cc2164736f6c63430008140033",
  "deployedBytecode": "0x60806040525f80fdfea2646970667358221220026c925b4b311cc24b844543f9f50795907d6f595dd5d10c3e145ea2aaa2cc2164736f6c63430008140033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1355:28",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:28",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:28",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:28",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:28"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:28"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:28",
                "type": ""
              }
            ],
            "src": "7:75:28"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:28",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:28",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:28"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:28"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:28",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:28",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:28"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:28"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:28",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:28",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:28"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:28"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:28",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:28",
                "type": ""
              }
            ],
            "src": "334:126:28"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:28",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:28"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:28"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:28"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:28",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:28",
                "type": ""
              }
            ],
            "src": "466:96:28"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:28",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:28",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:28",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:28"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:28"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:28"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:28"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:28"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:28"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:28"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:28"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:28"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:28",
                "type": ""
              }
            ],
            "src": "568:122:28"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "759:80:28",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "769:22:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "784:6:28"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "778:5:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "778:13:28"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "769:5:28"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "827:5:28"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "800:26:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "800:33:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "800:33:28"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "737:6:28",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "745:3:28",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "753:5:28",
                "type": ""
              }
            ],
            "src": "696:143:28"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "939:413:28",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "985:83:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "987:77:28"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "987:79:28"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "987:79:28"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "960:7:28"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "969:9:28"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "956:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "956:23:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "981:2:28",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "952:3:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "952:32:28"
                  },
                  "nodeType": "YulIf",
                  "src": "949:119:28"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1078:128:28",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1093:15:28",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1107:1:28",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1097:6:28",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1122:74:28",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1168:9:28"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1179:6:28"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1164:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1164:22:28"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1188:7:28"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1132:31:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1132:64:28"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1122:6:28"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1216:129:28",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1231:16:28",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1245:2:28",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1235:6:28",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1261:74:28",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1307:9:28"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1318:6:28"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1303:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1303:22:28"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1327:7:28"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1271:31:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1271:64:28"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1261:6:28"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "901:9:28",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "912:7:28",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "924:6:28",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "932:6:28",
                "type": ""
              }
            ],
            "src": "845:507:28"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
      "id": 28,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [],
  "sourceMap": "30:238:0:-:0;;;211:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;30:238;;88:117:28;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;30:238:0:-;;;;;;;",
  "deployedSourceMap": "30:238:0:-:0;;;;;",
  "source": "pragma solidity >= \"0.8.20\";\n\ncontract C {\n  //constructor(address _handshakes, address gitorg_, address gitarg_, address gitarray_) {\n\n  //constructor(address _handshakes, address gitorg_, address gitarg_) {\n  constructor(address _handshakes, address gitorg_) {\n  }\n}\n",
  "sourcePath": "/home/gitarg/gitarg/solidity_ico/contracts/C.sol",
  "ast": {
    "absolutePath": "project:/contracts/C.sol",
    "exportedSymbols": {
      "C": [
        10
      ]
    },
    "id": 11,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.8.20"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:28:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "C",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 10,
        "linearizedBaseContracts": [
          10
        ],
        "name": "C",
        "nameLocation": "39:1:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 8,
              "nodeType": "Block",
              "src": "261:5:0",
              "statements": []
            },
            "id": 9,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3,
                  "mutability": "mutable",
                  "name": "_handshakes",
                  "nameLocation": "231:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 9,
                  "src": "223:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "223:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5,
                  "mutability": "mutable",
                  "name": "gitorg_",
                  "nameLocation": "252:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 9,
                  "src": "244:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "244:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "222:38:0"
            },
            "returnParameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "261:0:0"
            },
            "scope": 10,
            "src": "211:55:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 11,
        "src": "30:238:0",
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "src": "0:269:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.20+commit.a1b79de6.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-02-26T21:42:43.543Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}