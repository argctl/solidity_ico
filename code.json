{
  "gitarray": "Ly8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEJVU0wtMS4xCnByYWdtYSBzb2xpZGl0eSA+PSAiMC44LjE4IjsKaW1wb3J0ICIuL2dpdGV0YS5zb2wiOwovL2ltcG9ydCAiLi9saWJyYXJpZXMvZ2l0b3JnLnNvbCI7CmltcG9ydCAiLi9naXRhcmcuc29sIjsKaW1wb3J0ICIuL29iamVjdHMvUmVwby5zb2wiOwppbXBvcnQgIi4vb2JqZWN0cy9Db21taXQuc29sIjsKCmNvbnRyYWN0IFByb3Bvc2FsIHsKICB1aW50IHByaXZhdGUgcHJvcG9zYWw7CiAgc3RyaW5nIHByaXZhdGUgdmFsdWU7CiAgYWRkcmVzcyBwcml2YXRlIG9iamVjdDsKICBhZGRyZXNzIHByaXZhdGUgY3JlYXRvcjsKICBib29sIHB1YmxpYyBzYWZlTW9kZSA9IHRydWU7CgogIG1vZGlmaWVyIHNhZmUgKCkgewogICAgaWYgKHNhZmVNb2RlKSByZXF1aXJlKG1zZy5zZW5kZXIgPT0gY3JlYXRvcik7CiAgICBfOwogIH0KCiAgY29uc3RydWN0b3IodWludCBfcHJvcG9zYWwsIHN0cmluZyBtZW1vcnkgX3ZhbHVlLCBhZGRyZXNzIF9vYmplY3QpIHsKICAgIGNyZWF0b3IgPSBtc2cuc2VuZGVyOyAgCiAgICBvYmplY3QgPSBfb2JqZWN0OwogICAgdmFsdWUgPSBfdmFsdWU7CiAgICBwcm9wb3NhbCA9IF9wcm9wb3NhbDsKICB9CiAgZnVuY3Rpb24gZGlzYWJsZVNhZmVNb2RlKCkgcHVibGljIHNhZmUoKSByZXR1cm5zKHVpbnQpICB7CiAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gY3JlYXRvcik7CiAgICBzYWZlTW9kZSA9IGZhbHNlOwogICAgcmV0dXJuIGJsb2NrLnRpbWVzdGFtcDsKICB9CiAgZnVuY3Rpb24gZ2V0UHJvcG9zYWwoKSBwdWJsaWMgdmlldyBzYWZlKCkgcmV0dXJucyh1aW50KSB7CiAgICBpZiAoc2FmZU1vZGUpIHJlcXVpcmUobXNnLnNlbmRlciA9PSBjcmVhdG9yKTsKICAgIHJldHVybiBwcm9wb3NhbDsKICB9CiAgZnVuY3Rpb24gZ2V0VmFsdWUoKSBwdWJsaWMgdmlldyBzYWZlKCkgcmV0dXJucyhzdHJpbmcgbWVtb3J5KSB7CiAgICBpZiAoc2FmZU1vZGUpIHJlcXVpcmUobXNnLnNlbmRlciA9PSBjcmVhdG9yKTsKICAgIHJldHVybiB2YWx1ZTsKICB9CiAgZnVuY3Rpb24gZ2V0T2JqZWN0KCkgcHVibGljIHZpZXcgc2FmZSgpIHJldHVybnMoYWRkcmVzcykgewogICAgaWYgKHNhZmVNb2RlKSByZXF1aXJlKG1zZy5zZW5kZXIgPT0gY3JlYXRvcik7CiAgICByZXR1cm4gb2JqZWN0OwogIH0KICBmdW5jdGlvbiBnZXRDcmVhdG9yKCkgcHVibGljIHZpZXcgc2FmZSgpIHJldHVybnMoYWRkcmVzcykgewogICAgaWYgKHNhZmVNb2RlKSByZXF1aXJlKG1zZy5zZW5kZXIgPT0gY3JlYXRvcik7CiAgICByZXR1cm4gY3JlYXRvcjsKICB9Cn0KCmNvbnRyYWN0IEhhbmRzaGFrZXMgewogIGFkZHJlc3MgY3JlYXRvcjsKICBhZGRyZXNzIG93bmVyOwogIG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50KSBoYW5kc2hha2VzOwogIG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50KSBwcml2YXRlIHNob29rOwogIHVpbnQgdGhyZXNob2xkOwoKICBhZGRyZXNzIHByb3Bvc2FsOwogIHVpbnQgcHJvcG9zYWxUaW1lOwoKICBib29sIGNvcnA7CgogIG1vZGlmaWVyIG93bmVkICgpIHsKICAgIGlmIChjb3JwKSByZXF1aXJlKG1zZy5zZW5kZXIgPT0gb3duZXIpOwogIH0KCiAgY29uc3RydWN0b3IoYWRkcmVzc1tdIG1lbW9yeSBfaGFuZHNoYWtlcywgYWRkcmVzcyBfb3duZXIsIHVpbnQgX3RocmVzaG9sZCwgYm9vbCBjb3JwKSB7CiAgICBjcmVhdG9yID0gbXNnLnNlbmRlcjsKICAgIG93bmVyID0gX293bmVyOwogICAgcHJvcG9zYWwgPSBwcm9wb3NhbDsKICAgIGlmICh0aHJlc2hvbGQgPT0gMCkgewogICAgICB0aHJlc2hvbGQgPSBfaGFuZHNoYWtlcy5sZW5ndGg7CiAgICB9IGVsc2UgewogICAgICB0aHJlc2hvbGQgPSBfdGhyZXNob2xkOwogICAgfQogICAgZm9yICh1aW50IGkgPSAwOyBpIDwgX2hhbmRzaGFrZXMubGVuZ3RoOyBpKyspIHsKICAgICAgaGFuZHNoYWtlc1tfaGFuZHNoYWtlc1tpXV0gPSBibG9jay50aW1lc3RhbXA7CiAgICB9CiAgfQogIGZ1bmN0aW9uIHNldFByb3Bvc2FsKGFkZHJlc3MgX3Byb3Bvc2FsKSBwdWJsaWMgcmV0dXJucyh1aW50KSB7CiAgICBwcm9wb3NhbCA9IF9wcm9wb3NhbDsKICAgIHByb3Bvc2FsVGltZSA9IGJsb2NrLnRpbWVzdGFtcDsKICAgIHJldHVybiBibG9jay50aW1lc3RhbXA7CiAgfQogIGZ1bmN0aW9uIGlzSGFuZHNoYWtlKGFkZHJlc3Mgc2VuZGVyKSBwdWJsaWMgdmlldyByZXR1cm5zKGJvb2wpIHsKICAgIC8vIHJldmlldyAtIG93bmVyIGFuZCBjcmVhdG9yIG9yIGp1c3Qgb3duZXIKICAgIHJlcXVpcmUoY3JlYXRvciA9PSBtc2cuc2VuZGVyIHx8IG93bmVyID09IG1zZy5zZW5kZXIpOwogICAgcmV0dXJuIGhhbmRzaGFrZXNbc2VuZGVyXSAhPSAwOwogIH0KICBmdW5jdGlvbiBpc0hhbmRzaGFrZSgpIHB1YmxpYyB2aWV3IHJldHVybnMoYm9vbCkgewogICAgcmV0dXJuIGhhbmRzaGFrZXNbbXNnLnNlbmRlcl0gIT0gMDsKICB9CiAgZnVuY3Rpb24gc2hha2UoKSBwdWJsaWMgewogICAgc2hvb2tbbXNnLnNlbmRlcl0gPSBibG9jay50aW1lc3RhbXA7CiAgfQogIC8vIFRPRE8gLSBleHBpcnkgb24gaGFuZHNoYWtlIGNoZWNrIHdpdGggZ3JlYXRlcnRoYW4KICBmdW5jdGlvbiBjaGVjayhhZGRyZXNzW10gbWVtb3J5IHNoYWtlcywgYWRkcmVzc1tdIG1lbW9yeSBub3NoYWtlcykgcHVibGljIG93bmVkIHsKICAgIGZvciAodWludCBpID0gMDsgaSA8IHNoYWtlcy5sZW5ndGg7IGkrKykgewogICAgICByZXF1aXJlKGhhbmRzaGFrZXNbc2hha2VzW2ldXSAhPSAwKTsKICAgICAgcmVxdWlyZShzaG9va1tzaGFrZXNbaV1dICE9IDApOwogICAgfQogICAgZm9yICh1aW50IGkgPSAwOyBpIDwgbm9zaGFrZXMubGVuZ3RoOyBpKyspIHsKICAgICAgcmVxdWlyZShoYW5kc2hha2VzW25vc2hha2VzW2ldXSAhPSAwKTsKICAgICAgcmVxdWlyZShzaG9va1tub3NoYWtlc1tpXV0gPT0gMCk7CiAgICB9CiAgfQp9Cgpjb250cmFjdCBnaXRhcnJheSB7CgogIGFkZHJlc3MgY3JlYXRvcjsKICBhZGRyZXNzIG93bmVyOwogIHVpbnQgdGhyZXNob2xkOwogIG1hcHBpbmcoYWRkcmVzcyA9PiBIYW5kc2hha2VzKSBzaWduZXJzOwogIG1hcHBpbmcoYWRkcmVzcyA9PiBSZXBvKSByZXBvczsKICAKICBjb25zdHJ1Y3RvcihhZGRyZXNzW10gbWVtb3J5IF9oYW5kc2hha2VzLCBhZGRyZXNzIF9vd25lcikgewogICAgdGhyZXNob2xkID0gX2hhbmRzaGFrZXMubGVuZ3RoOwogICAgY3JlYXRvciA9IG1zZy5zZW5kZXI7CiAgICBvd25lciA9IF9vd25lcjsKICAgIEhhbmRzaGFrZXMgaGFuZHNoYWtlcyA9IG5ldyBIYW5kc2hha2VzKF9oYW5kc2hha2VzLCBfb3duZXIsIHRocmVzaG9sZCk7CiAgICBzaWduZXJzW21zZy5zZW5kZXJdID0gaGFuZHNoYWtlczsKICB9ICAKICAvLyBSRVZJRVcgLSBjdXN0b21pemFibGUgdGhyZXNob2xkPwogIGZ1bmN0aW9uIHJlcG8oYWRkcmVzc1tdIG1lbW9yeSBfaGFuZHNoYWtlcywgc3RyaW5nIG1lbW9yeSBfbmFtZSwgc3RyaW5nIG1lbW9yeSBfdXJsLCBhZGRyZXNzIF9vd25lcikgcHVibGljIHJldHVybnModWludCkgewogICAgSGFuZHNoYWtlcyBoYW5kc2hha2VzID0gbmV3IEhhbmRzaGFrZXMoX2hhbmRzaGFrZXMsIF9vd25lciwgdGhyZXNob2xkKTsKICAgIHNpZ25lcnNbbXNnLnNlbmRlcl0gPSBoYW5kc2hha2VzOwogICAgUmVwbyBfcmVwbyA9IG5ldyBSZXBvKF9uYW1lLCBfdXJsLCBfb3duZXIpOwogICAgcmVwb3NbbXNnLnNlbmRlcl0gPSBfcmVwbzsKICAgIC8vIFJFVklFVyAtIHJldHVybiByZXBvIG9iamVjdCBvciBhZGRyZXNzPwogICAgcmV0dXJuIGJsb2NrLnRpbWVzdGFtcDsKICB9CiAgLy8gVE9ETyAtIGNvbW1pdCB3aXRoIG9uZSBvciBtb3JlIGhhbmRzaGFrZXMKCiAgZnVuY3Rpb24gY29tbWl0KGFkZHJlc3Mgc2lnbmVyLCBzdHJpbmcgbWVtb3J5IF9tZXNzYWdlLCBzdHJpbmcgbWVtb3J5IF9hdXRob3IsIHN0cmluZyBtZW1vcnkgX2RhdGUpIHB1YmxpYyByZXR1cm5zKHVpbnQpIHsKICAgIEhhbmRzaGFrZXMgaGFuZHNoYWtlcyA9IHNpZ25lcnNbc2lnbmVyXTsKICAgIFJlcG8gX3JlcG8gPSByZXBvc1tzaWduZXJdOwogICAgcmVxdWlyZShoYW5kc2hha2VzLmlzSGFuZHNoYWtlKG1zZy5zZW5kZXIpKTsKICAgIC8vY29uc3RydWN0b3IoYWRkcmVzcyBfd2FsbGV0LCBhZGRyZXNzIF9yZXBvLCBzdHJpbmcgbWVtb3J5IF9tZXNzYWdlLCBzdHJpbmcgbWVtb3J5IF9hdXRob3IsIHN0cmluZyBtZW1vcnkgX2RhdGUpIHsKICAgIENvbW1pdCBfY29tbWl0ID0gbmV3IENvbW1pdChtc2cuc2VuZGVyLCBhZGRyZXNzKF9yZXBvKSwgX21lc3NhZ2UsIF9hdXRob3IsIF9kYXRlKTsKICAgIF9yZXBvLmNvbW1pdChfY29tbWl0LCBtc2cuc2VuZGVyKTsKICAgIHJldHVybiBibG9jay50aW1lc3RhbXA7CiAgfQoKICAvLyBSRVZJRVcgLSBjb21taXQgY2FsbCB0b3RhbD8KICAvL2Z1bmN0aW9uIGNvbW1pdCgpCiAgLy8gUkVWSUVXIC0gaW4gaGFuZHNoYWtlcyBvYmplY3QKICAvLyBSRVZJRVcgLSBpbiBnaXRvcmcgbGlicmFyeT8KICAvLyBUT0RPIC0gdGhyZXNob2xkIGFkanVzdG1lbnQKICAvL2Z1bmN0aW9uIHRocmVzaG9sZAogIC8vIFRPRE8gLSBhZGQgaGFuZHNoYWtlCiAgLy9mdW5jdGlvbiBoYW5kc2hha2UKICAvLyBUT0RPIC0gcmVtb3ZlIGhhbmRzaGFrZQogIC8vZnVuY3Rpb24gaGFuZHNoYWtlCiAgLy8gVE9ETyAtIHRvdGFsIHJlY3Vyc2l2ZSBzaWduZXJzCiAgLy9mdW5jdGlvbiB0b3RhbAogIC8vIFRPRE8gLSBhY3Rpb24gd2l0aCB0b3RhbGVkIGhhbmRzaGFrZXMKICAvL2Z1bmN0aW9uIGFjdGlvbgogIC8vIFRPRE8gLSBzZXQvZ2V0IGFjdGlvbiBvciBhY3Rpb24gbGlzdAogIAp9Cg==",
  "giteta": "Ly8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEJVU0wtMS4xCnByYWdtYSBzb2xpZGl0eSA+PSAiMC44LjE4IjsKaW1wb3J0ICIuL2dpdGFyZy5zb2wiOwppbXBvcnQgIi4vb2JqZWN0cy9SZXBvLnNvbCI7CmltcG9ydCAiLi9vYmplY3RzL0NvbW1pdC5zb2wiOwppbXBvcnQgIi4vb2JqZWN0cy9Mb2cuc29sIjsKCi8vIFRpbWVMb2cgaGFuZHNoYWtlIHN0cmluZy9ieXRlcyBmb3IgYmxvY2tjaGFpbiBpbnRlcmZhY2UKCmNvbnRyYWN0IGdpdGV0YSB7CiAgYWRkcmVzcyBnaXRhcmdXYWxsZXQ7CiAgZ2l0YXJnIEdpdGFyZzsKCiAgc3RydWN0IFRpbWUgewogICAgYWRkcmVzcyBjb21taXQ7CiAgICB1aW50IHRpbWVzdGFtcDsKICB9CgogIG1hcHBpbmcoUmVwbyA9PiBUaW1lW10pIGNvbW1pdHM7CiAgbWFwcGluZyhhZGRyZXNzID0+IFRpbWUpIHZhbHVpbmc7CiAgbWFwcGluZyhhZGRyZXNzID0+IHVpbnQpIGJvdW50aWVzOwogIG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50KSB2YWx1ZXM7CiAgCiAgY29uc3RydWN0b3IoYWRkcmVzcyBfZ2l0YXJnKSB7CiAgICBHaXRhcmcgPSBnaXRhcmcoX2dpdGFyZyk7CiAgICBnaXRhcmdXYWxsZXQgPSBtc2cuc2VuZGVyOwogIH0KICAvLyBSRVZJRVcgLSBwYXlpbnRvIHJlcG8/CiAgLy9jb25zdHJ1Y3RvcihhZGRyZXNzIF93YWxsZXQsIGFkZHJlc3MgX3JlcG8sIGJ5dGVzIG1lbW9yeSBfbWVzc2FnZSwgYnl0ZXMgbWVtb3J5IF9hdXRob3IsIGJ5dGVzIG1lbW9yeSBfZGF0ZSkgewogIGZ1bmN0aW9uIGNvbW1pdChhZGRyZXNzIF9yZXBvLCBzdHJpbmcgbWVtb3J5IG1lc3NhZ2UsIHN0cmluZyBtZW1vcnkgYXV0aG9yLCBzdHJpbmcgbWVtb3J5IGRhdGUsIHVpbnQgZXNjcm93KSBwdWJsaWMgcmV0dXJucyAodWludCkgewogICAgcmVxdWlyZShHaXRhcmcuYmFsYW5jZU9mKG1zZy5zZW5kZXIpID49IGVzY3Jvdyk7CiAgICAvLyBSRVZJRVcgLSBzaG91bGQgdGhlIHRyYW5zZmVyIGJlIHBsYWNlZCBpbnRvIHRoZSByZXBvPwogICAgQ29tbWl0IGMgPSBuZXcgQ29tbWl0KG1zZy5zZW5kZXIsIF9yZXBvLCBtZXNzYWdlLCBhdXRob3IsIGRhdGUpOwogICAgR2l0YXJnLnRyYW5zZmVyRnJvbShtc2cuc2VuZGVyLCBhZGRyZXNzKGMpLCBlc2Nyb3cpOwogICAgUmVwbyByZXBvID0gUmVwbyhfcmVwbyk7CiAgICBUaW1lIG1lbW9yeSB0aW1lID0gVGltZShhZGRyZXNzKGMpLCBibG9jay50aW1lc3RhbXApOwogICAgY29tbWl0c1tyZXBvXS5wdXNoKHRpbWUpOwogICAgdmFsdWluZ1thZGRyZXNzKGMpXSA9IHRpbWU7CiAgICByZXR1cm4gYmxvY2sudGltZXN0YW1wOwogIH0KICAvLyByYWlzZSB2YWx1ZSBvZiBjb21taXRzIC0gY2FsbGVkIHdoZW4gdXNlZCBzdWNjZXNzZnVsbHkgYnkgY2hhaW4KICBmdW5jdGlvbiB1cChhZGRyZXNzIHBheWFibGUgX2NvbW1pdCkgcHVibGljIHBheWFibGUgcmV0dXJucyAodWludCkgeyAvL3JlLXVwPwogICAgLy8gc3VidHJhY3QgdGltZXN0YW1wcyAKICAgIC8vIFRPRE8gLSByZXBvIG93bmVyIG9yIGdpdGFycmF5IHRpZSBpbj8KICAgIFRpbWUgbWVtb3J5IHRpbWUgPSB2YWx1aW5nW19jb21taXRdOwogICAgdWludCBfdmFsdWUgPSBibG9jay50aW1lc3RhbXAgLSB0aW1lLnRpbWVzdGFtcDsKICAgIC8vIFJFVklFVyAtIGd0ZQogICAgcmVxdWlyZShHaXRhcmcuYmFsYW5jZU9mKG1zZy5zZW5kZXIpID4gX3ZhbHVlKTsKICAgIC8vIFJFVklFVyAtIHJlcG8gaW5zdGVhZCBvZiBjb21taXQ/CiAgICBHaXRhcmcudHJhbnNmZXJGcm9tKG1zZy5zZW5kZXIsIF9jb21taXQsIF92YWx1ZSk7CiAgICB2YWx1ZXNbX2NvbW1pdF0gPSBfdmFsdWU7CiAgICByZXR1cm4gX3ZhbHVlOwogIH0KICAvLyByYWlzZSB2YWx1ZSBvZiBjb21taXRzIC0gY2FsbGVkIHdoZW4gaXNzdWUgaXMgY3JlYXRlZCBpbnZvbHZpbmcgY29tbWl0CiAgZnVuY3Rpb24gZG93bihhZGRyZXNzIHBheWFibGUgX3JlcG8sIGFkZHJlc3MgcGF5YWJsZSBfY29tbWl0LCB1aW50IGJvdW50eSkgcHVibGljIHBheWFibGUgcmV0dXJucyAodWludCkgewogICAgLy8gVE9ETyAtIGNoZWNrIGdpdGFyZyB0b2tlbiBzdGFzaCBvZiB3YWxsZXQKICAgIFJlcG8gcmVwbyA9IFJlcG8oX3JlcG8pOwogICAgLy8gVE9ETyAtIGdpdG9yZyBsaWJyYXJ5IHRvIHVzZSBoYW5kc2hha2VzCiAgICAvLyBSRVZJRVcgLSBzaG91bGQgdGhpcyBiZSB0aGUgY29tbWl0IG93bmVyPwogICAgcmVxdWlyZShtc2cuc2VuZGVyID09IHJlcG8uZ2V0T3duZXIoKSk7CiAgICByZXF1aXJlKHZhbHVlc1tfY29tbWl0XSA+PSBib3VudHkgJiYgR2l0YXJnLmJhbGFuY2VPZihfY29tbWl0KSA+PSBib3VudHkpOwogICAgR2l0YXJnLnRyYW5zZmVyRnJvbShfY29tbWl0LCBfcmVwbywgYm91bnR5KTsKICAgIC8vIFJFVklFVyAtIGJvdW50eSBuZWVkZWQKICAgIGJvdW50aWVzW19jb21taXRdICs9IGJvdW50eTsKICAgIC8vIFJFVklFVyAtIHZhbHVlcyBiYXNlZCBvbiB0aGUgZ2l0IHRva2VuIGJhY2tlZD8KICAgIHZhbHVlc1tfY29tbWl0XSAtPSBib3VudHk7CiAgICByZXR1cm4gMDsKICB9CiAgLy8gcXVlcnkgdmFsdWUgb2YgY29tbWl0CiAgZnVuY3Rpb24gdmFsdWUoYWRkcmVzcyBfY29tbWl0KSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50KSB7CiAgICByZXR1cm4gdmFsdWVzW19jb21taXRdOwogIH0KICAvLyBxdWVyeSBjb21taXRzIGJ5IHJhbmdlLCByZXBvIG9yIHZhbHVlCiAgZnVuY3Rpb24gcXVlcnkoYWRkcmVzcyBfcmVwbywgdWludCBzdGFydCwgdWludCBlbmQpIHB1YmxpYyB2aWV3IHJldHVybnMgKFRpbWVbXSBtZW1vcnkpIHsKICAgIFRpbWVbXSBtZW1vcnkgX2NvbW1pdHM7CiAgICBUaW1lW10gbWVtb3J5IHJlcG8gPSBjb21taXRzW1JlcG8oX3JlcG8pXTsKICAgIGZvciAodWludCBpID0gMDsgaSA8IHJlcG8ubGVuZ3RoOyBpKyspIHsKICAgICAgVGltZSBtZW1vcnkgdGltZSA9IHJlcG9baV07CiAgICAgIGlmICh0aW1lLnRpbWVzdGFtcCA+PSBzdGFydCAmJiB0aW1lLnRpbWVzdGFtcCA8PSBlbmQpIF9jb21taXRzW2ldID0gdGltZTsKICAgIH0KICAgIHJldHVybiBfY29tbWl0czsgCiAgfQogIGZ1bmN0aW9uIHF1ZXJ5KGFkZHJlc3MgcmVwbykgcHVibGljIHZpZXcgcmV0dXJucyAoVGltZVtdIG1lbW9yeSkgewogICAgcmV0dXJuIGNvbW1pdHNbUmVwbyhyZXBvKV07CiAgfQogIGZ1bmN0aW9uIHF1ZXJ5KGFkZHJlc3MgX3JlcG8sIHVpbnQgX3ZhbHVlKSBwdWJsaWMgdmlldyByZXR1cm5zIChUaW1lW10gbWVtb3J5KSB7CiAgICBUaW1lW10gbWVtb3J5IF9jb21taXRzOwogICAgVGltZVtdIG1lbW9yeSByZXBvID0gY29tbWl0c1tSZXBvKF9yZXBvKV07CiAgICBmb3IgKHVpbnQgaSA9IDA7IGkgPCByZXBvLmxlbmd0aDsgaSsrKSB7CiAgICAgIGlmICh2YWx1ZXNbcmVwb1tpXS5jb21taXRdID09IF92YWx1ZSkgewogICAgICAgIF9jb21taXRzW2ldID0gcmVwb1tpXTsKICAgICAgfQogICAgfQogICAgcmV0dXJuIF9jb21taXRzOwogIH0KfQo=",
  "gitarg": "Ly8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IFVOTElDRU5TRUQKcHJhZ21hIHNvbGlkaXR5ID49IjAuOC4xOCI7Ci8vIEludGVuZGVkIHVzZTogZXhjaGFuZ2UgZm9yIHNlcnZpY2VzIG9uIGdpdGFyZyBkZWNlbnRyYWxpemVkIHBsYXRmb3JtIGFuZCBhZGEgTkZUcyAocmVsZWFzZSBkYXRlIEp1bmUgMm5kIC0gSnVuZSAxNXRoIDIwMjMpCi8vIE5JQ0UtVE8tSEFWRVM6IAovLyAqIGxvY2sgcGFzc3dvcmQgaW50ZXJmYWNlCi8vICogdW5sb2NrIHBhc3N3b3JkIGludGVyZmFjZQovLyAqIHRpbWVzdGFtcCBiYXNlZCBsb2Nrb3V0Cgpjb250cmFjdCBnaXRhcmcgewogIC8qc3RydWN0IFNwZW5kRG93biB7CiAgICBhZGRyZXNzIG93bmVyOwogICAgYWRkcmVzcyBzcGVuZGVyOwogICAgdWludDI1NiBhbW91bnQ7CiAgfSAqLwogIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBfZnJvbSwgYWRkcmVzcyBpbmRleGVkIF90bywgdWludDI1NiBfdmFsdWUpOwogIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBfb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpOwoKCiAgbWFwcGluZyhhZGRyZXNzID0+IG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikpIGFsbG93ZWQ7CgogIG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50MjU2KSBwcml2YXRlIGJhbGFuY2VzOwogIG1hcHBpbmcoYWRkcmVzcyA9PiBib29sKSBwcml2YXRlIGxvY2tlZDsKCiAgdWludDI1NiB0b3RhbFN1cHBseV8gPSAxMDAwIGV0aGVyOwoKICBjb25zdHJ1Y3RvcigpIHsKICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gdG90YWxTdXBwbHlfOwogIH0KICBmdW5jdGlvbiBsb2NrKCkgcHVibGljIHJldHVybnMgKGJvb2wpIHsKICAgIGxvY2tlZFttc2cuc2VuZGVyXSA9IHRydWU7CiAgICByZXR1cm4gbG9ja2VkW21zZy5zZW5kZXJdOwogIH0KICBmdW5jdGlvbiB1bmxvY2soKSBwdWJsaWMgcmV0dXJucyAoYm9vbCkgewogICAgbG9ja2VkW21zZy5zZW5kZXJdID0gZmFsc2U7CiAgICByZXR1cm4gbG9ja2VkW21zZy5zZW5kZXJdOwogIH0KCiAgLy8gSUNPIEVSQy0yMCBzdGFuZGFyZCBmdW5jdGlvbnMKCiAgLy9odHRwczovL2VpcHMuZXRoZXJldW0ub3JnL0VJUFMvZWlwLTIwI25hbWUKICAvLyBmdW5jdGlvbiBkZWZpbml0aW9uIGNhbiBiZSBjaGFuZ2VkIHRvIHB1cmUgLSBub3QgaW4gc3RhbmRhcmQKICBmdW5jdGlvbiBuYW1lKCkgcHVibGljIHB1cmUgcmV0dXJucyAoc3RyaW5nIG1lbW9yeSkgewogICAgcmV0dXJuICJnaXRhcmciOyAgCiAgfQogIC8vaHR0cHM6Ly9laXBzLmV0aGVyZXVtLm9yZy9FSVBTL2VpcC0yMCNzeW1ib2wKICAvLyBmdW5jdGlvbiBkZWZpbml0aW9uIGNhbiBiZSBjaGFuZ2VkIHRvIHB1cmUgLSBub3QgaW4gc3RhbmRhcmQKICBmdW5jdGlvbiBzeW1ib2woKSBwdWJsaWMgcHVyZSByZXR1cm5zIChzdHJpbmcgbWVtb3J5KSB7CiAgICByZXR1cm4gIkdJVCI7CiAgfQogIC8vaHR0cHM6Ly9laXBzLmV0aGVyZXVtLm9yZy9FSVBTL2VpcC0yMCNkZWNpbWFscwogIC8vIGZ1bmN0aW9uIGRlZmluaXRpb24gY2FuIGJlIGNoYW5nZWQgdG8gcHVyZSAtIG5vdCBpbiBzdGFuZGFyZAogIGZ1bmN0aW9uIGRlY2ltYWxzKCkgcHVibGljIHB1cmUgcmV0dXJucyAodWludDgpIHsKICAgIHJldHVybiA2OwogIH0KICAvL2h0dHBzOi8vZWlwcy5ldGhlcmV1bS5vcmcvRUlQUy9laXAtMjAjZGVjaW1hbHMKICAvLyBmdW5jdGlvbiBkZWZpbml0aW9uIGNhbiBiZSBjaGFuZ2VkIHRvIHB1cmUgLSBub3QgaW4gc3RhbmRhcmQKICBmdW5jdGlvbiB0b3RhbFN1cHBseSgpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHJldHVybiB0b3RhbFN1cHBseV87CiAgfQogIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgcHVibGljIHZpZXcgcmV0dXJucyAodWludDI1NiBiYWxhbmNlKSB7CiAgICByZXF1aXJlKCFsb2NrZWRbbXNnLnNlbmRlcl0gJiYgIWxvY2tlZFtfb3duZXJdKTsKICAgIHJldHVybiBiYWxhbmNlc1tfb3duZXJdOwogIH0KICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgIHJlcXVpcmUoIWxvY2tlZFttc2cuc2VuZGVyXSAmJiAhbG9ja2VkW190b10pOwogICAgcmVxdWlyZShfdmFsdWUgPD0gYmFsYW5jZXNbbXNnLnNlbmRlcl0pOwogICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSBiYWxhbmNlc1ttc2cuc2VuZGVyXSAtIF92YWx1ZTsKICAgIGJhbGFuY2VzW190b10gPSBiYWxhbmNlc1tfdG9dICsgX3ZhbHVlOwogICAgZW1pdCBUcmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF92YWx1ZSk7CiAgICByZXR1cm4gdHJ1ZTsKICB9CiAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgcmVxdWlyZSghbG9ja2VkW21zZy5zZW5kZXJdICYmICFsb2NrZWRbX2Zyb21dICYmICFsb2NrZWRbX3RvXSk7CiAgICByZXF1aXJlKF92YWx1ZSA8PSBiYWxhbmNlc1tfZnJvbV0pOwogICAgcmVxdWlyZShfdmFsdWUgPD0gYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0pOwogICAgYmFsYW5jZXNbX2Zyb21dID0gYmFsYW5jZXNbX2Zyb21dIC0gX3ZhbHVlOwogICAgYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gPSBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSAtIF92YWx1ZTsKICAgIGJhbGFuY2VzW190b10gPSBiYWxhbmNlc1tfdG9dICsgX3ZhbHVlOwogICAgZW1pdCBUcmFuc2ZlcihfZnJvbSwgX3RvLCBfdmFsdWUpOwogICAgcmV0dXJuIHRydWU7CiAgfQogIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgIHJlcXVpcmUoIWxvY2tlZFttc2cuc2VuZGVyXSAmJiAhbG9ja2VkW19zcGVuZGVyXSk7CiAgICBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IF92YWx1ZTsKICAgIGVtaXQgQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIF92YWx1ZSk7CiAgICByZXR1cm4gdHJ1ZTsKICB9CiAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyKSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50MjU2IHJlbWFpbmluZykgewogICAgLy8gU1RZTEVFRQogICAgLy9mb3IgKHVpbnQgaSA9IDA7IGkgPCBzcGVuZERvd25GdW5kcy5sZW5ndGg7IGkrKykgewogICAgIC8vIGlmIChzcGVuZERvd25GdW5kc1tpXS5zcGVuZGVyID09IF9zcGVuZGVyICYmIHNwZW5kRG93bkZ1bmRzW2ldLm93bmVyID09IF9vd25lcikgewogICAgICAvLyAgcmV0dXJuIHNwZW5kRG93bkZ1bmRzW2ldLmFtb3VudDsKICAgICAgLy99CiAgICAvL30KICAgIHJlcXVpcmUoIWxvY2tlZFttc2cuc2VuZGVyXSAmJiAhbG9ja2VkW19vd25lcl0gJiYgIWxvY2tlZFtfc3BlbmRlcl0pOwogICAgcmV0dXJuIGFsbG93ZWRbX293bmVyXVtfc3BlbmRlcl07CiAgfQp9Cg=="
}