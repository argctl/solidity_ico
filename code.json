{
  "giteta": "Ly8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEJVU0wtMS4xCnByYWdtYSBzb2xpZGl0eSA+PSAiMC44LjIwIjsKaW1wb3J0ICIuL2dpdGFycmF5LnNvbCI7CmltcG9ydCAiLi9naXRhcmcuc29sIjsKaW1wb3J0ICIuL29iamVjdHMvUmVwby5zb2wiOwppbXBvcnQgIi4vb2JqZWN0cy9Db21taXQuc29sIjsKaW1wb3J0ICIuL29iamVjdHMvTG9nLnNvbCI7CgovLyBUaW1lTG9nIGhhbmRzaGFrZSBzdHJpbmcvYnl0ZXMgZm9yIGJsb2NrY2hhaW4gaW50ZXJmYWNlCgpjb250cmFjdCBnaXRldGEgewogIC8vIFJFVklFVyAtIHdhbGxldCBjaGFuZ2VhYmxlIHdpdGggaGFuZHNoYWtlcyBpbiBnaXRhcnJheQogIC8vIFJFVklFVyAtIHNob3VsZCB3ZSBjaGFuZ2UgdGhlIG1vZGlmaWVycyB0byBwcml2YXRlCiAgYWRkcmVzcyBwdWJsaWMgZ2l0YXJnV2FsbGV0OwogIGdpdGFyZyBwdWJsaWMgR2l0YXJnOwogIGFkZHJlc3MgcHVibGljIGFyZzsKCiAgdWludCBwdWJsaWMgc2VydmljZTsKCiAgc3RydWN0IFRpbWUgewogICAgYWRkcmVzcyBjb21taXQ7CiAgICB1aW50IHRpbWVzdGFtcDsKICB9CgogIG1hcHBpbmcoUmVwbyA9PiBUaW1lW10pIHByaXZhdGUgY29tbWl0czsKICBtYXBwaW5nKGFkZHJlc3MgPT4gVGltZSkgcHJpdmF0ZSB2YWx1aW5nOwogIG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50KSBwcml2YXRlIGJvdW50aWVzOwoKICBldmVudCBDb20oYWRkcmVzcyBjb21taXQpOwogIGV2ZW50IENvbW0oVGltZVtdIGNvbW1pdHMpOwogIGV2ZW50IFZhbHVlKHVpbnQgdmFsdWUpOwogIAogIGNvbnN0cnVjdG9yKGFkZHJlc3MgX2dpdGFyZykgewogICAgYXJnID0gX2dpdGFyZzsKICAgIEdpdGFyZyA9IGdpdGFyZyhfZ2l0YXJnKTsKICAgIGdpdGFyZ1dhbGxldCA9IG1zZy5zZW5kZXI7CiAgfQogIC8vIFJFVklFVyAtIHBheWludG8gcmVwbz8KICAvL2NvbnN0cnVjdG9yKGFkZHJlc3MgX3dhbGxldCwgYWRkcmVzcyBfcmVwbywgYnl0ZXMgbWVtb3J5IF9tZXNzYWdlLCBieXRlcyBtZW1vcnkgX2F1dGhvciwgYnl0ZXMgbWVtb3J5IF9kYXRlKSB7CiAgZnVuY3Rpb24gY29tbWl0KGFkZHJlc3MgX3JlcG8sIHN0cmluZyBtZW1vcnkgbWVzc2FnZSwgc3RyaW5nIG1lbW9yeSBhdXRob3IsIHN0cmluZyBtZW1vcnkgZGF0ZSwgdWludCBlc2Nyb3cpIHB1YmxpYyByZXR1cm5zICh1aW50KSB7CiAgICByZXF1aXJlKEdpdGFyZy5iYWxhbmNlT2YobXNnLnNlbmRlcikgPj0gZXNjcm93LCAibm90IGVub3VnaCBlc2Nyb3ciKTsKICAgIC8vIFJFVklFVyAtIHNob3VsZCB0aGUgdHJhbnNmZXIgYmUgcGxhY2VkIGludG8gdGhlIHJlcG8/CiAgICBDb21taXQgYyA9IG5ldyBDb21taXQobXNnLnNlbmRlciwgX3JlcG8sIG1lc3NhZ2UsIGF1dGhvciwgZGF0ZSk7CiAgICAvL/CfpK8KICAgIHNlcnZpY2UgKz0gMTsKICAgIEdpdGFyZy50cmFuc2ZlckZyb20obXNnLnNlbmRlciwgYWRkcmVzcyhjKSwgZXNjcm93IC0gMSk7CiAgICBSZXBvIHJlcG8gPSBSZXBvKF9yZXBvKTsKICAgIFRpbWUgbWVtb3J5IHRpbWUgPSBUaW1lKGFkZHJlc3MoYyksIGJsb2NrLnRpbWVzdGFtcCk7CiAgICAvLyBSRVZJRVcgLSBzaG91bGQgdGhpcyByZWFsbHkgYmUgYSByZXBvIG9iamVjdCBhcyBhIGtleSBvciB0aGUgYWRkcmVzcwogICAgY29tbWl0c1tyZXBvXS5wdXNoKHRpbWUpOwogICAgdmFsdWluZ1thZGRyZXNzKGMpXSA9IHRpbWU7CiAgICBlbWl0IENvbShhZGRyZXNzKGMpKTsKICAgIHJldHVybiBHaXRhcmcuYmFsYW5jZU9mKGFkZHJlc3MoYykpOwogIH0KICAvLyByYWlzZSB2YWx1ZSBvZiBjb21taXRzIC0gY2FsbGVkIHdoZW4gdXNlZCBzdWNjZXNzZnVsbHkgYnkgY2hhaW4KICBmdW5jdGlvbiB1cChhZGRyZXNzIHBheWFibGUgX2NvbW1pdCwgYm9vbCBfYmFsYW5jZSkgcHVibGljIHBheWFibGUgcmV0dXJucyAodWludCkgewogICAgQ29tbWl0IGNvbW1pdCA9IENvbW1pdChfY29tbWl0KTsKICAgIFRpbWUgbWVtb3J5IHRpbWUgPSB2YWx1aW5nW19jb21taXRdOwogICAgdWludCBfdmFsdWUgPSBibG9jay50aW1lc3RhbXAgLSB0aW1lLnRpbWVzdGFtcDsKICAgIGlmIChfYmFsYW5jZSkgewogICAgICB1aW50IGJhbGFuY2UgPSBHaXRhcmcuYmFsYW5jZU9mKF9jb21taXQpOwogICAgICAvLyBSRVZJRVcgLSBzaG91bGQgd2Ugc3BpdCBiYWNrCiAgICAgIGlmIChfdmFsdWUgPCBiYWxhbmNlKSBfdmFsdWUgPSAwOyAKICAgICAgaWYgKF92YWx1ZSA+PSBiYWxhbmNlKSBfdmFsdWUgLT0gYmFsYW5jZTsKICAgIH0KICAgIHJlcXVpcmUoR2l0YXJnLmJhbGFuY2VPZihtc2cuc2VuZGVyKSA+IF92YWx1ZSwgIkJhbGFuY2Ugb2Ygd2FsbGV0IGlzIGxlc3MgdGhhbiB0aGUgZGlmZmVyZW5jZSAoX3ZhbHVlKSIpOwogICAgR2l0YXJnLnRyYW5zZmVyRnJvbShtc2cuc2VuZGVyLCBfY29tbWl0LCBfdmFsdWUpOwogICAgcmV0dXJuIF92YWx1ZTsKICB9CiAgLy8gcmFpc2UgdmFsdWUgb2YgY29tbWl0cyAtIGNhbGxlZCB3aGVuIGlzc3VlIGlzIGNyZWF0ZWQgaW52b2x2aW5nIGNvbW1pdAogIC8vIFJFVklFVyAtIGdpdGFycmF5IAogIC8vIFRPRE8gLSBQUk9QT1NBTCBmb3IgdW5zYWZlIGRvd24gZnVuY3Rpb24gZm9yIG9sZCBjb2RlIG1haW50ZW5hbmNlIG9yIGhhbmRzaGFrZSBtZW1iZXIKICBmdW5jdGlvbiBkb3duKGFkZHJlc3MgX3JlcG8sIGFkZHJlc3MgX2NvbW1pdCwgdWludCBib3VudHkpIHB1YmxpYyBwYXlhYmxlIHJldHVybnMgKHVpbnQpIHsKICAgIC8vIFRPRE8gLSBjaGVjayBnaXRhcmcgdG9rZW4gc3Rhc2ggb2Ygd2FsbGV0CiAgICBSZXBvIHJlcG8gPSBSZXBvKF9yZXBvKTsKICAgIENvbW1pdCBjb21taXQgPSBDb21taXQoX2NvbW1pdCk7CiAgICAvLyBUT0RPIC0gZ2l0b3JnIGxpYnJhcnkgdG8gdXNlIGhhbmRzaGFrZXMKICAgIC8vIFJFVklFVyAtIHNob3VsZCB0aGlzIGJlIHRoZSBjb21taXQgb3duZXI/IC0gaGFuZHNoYWtlcwogICAgcmVxdWlyZShtc2cuc2VuZGVyID09IHJlcG8ub3duZXIoKSwgInJlcG8gb3duZXIgZG9lc24ndCBtYXRjaCBtc2cuc2VuZGVyIik7CiAgICByZXF1aXJlKEdpdGFyZy5iYWxhbmNlT2YoYWRkcmVzcyhjb21taXQpKSA+PSBib3VudHksICJib3VudHkgbm90IGxlc3MgdGhhbiBiYWxhbmNlIik7CiAgICBjb21taXQuYXBwcm92ZShhZGRyZXNzKEdpdGFyZyksIGFkZHJlc3ModGhpcykpOwogICAgR2l0YXJnLnRyYW5zZmVyRnJvbShfY29tbWl0LCBfcmVwbywgYm91bnR5KTsKICAgIC8vIFJFVklFVyAtIGJvdW50eSBuZWVkZWQKICAgIGJvdW50aWVzW19jb21taXRdICs9IGJvdW50eTsKICAgIC8vIFJFVklFVyAtIHZhbHVlcyBiYXNlZCBvbiB0aGUgZ2l0IHRva2VuIGJhY2tlZD8KICAgIHJldHVybiBHaXRhcmcuYmFsYW5jZU9mKF9jb21taXQpOwogIH0KICAvLyBkcmFpbiBjb21taXRzIHBlciBjb21taXQsIGFjY2VzcyBhZnRlciBkb3duIGZ1bmN0aW9uIGlzIGNhbGxlZAogIGZ1bmN0aW9uIGRyYWluKGFkZHJlc3MgX2NvbW1pdCkgcHVibGljIHBheWFibGUgcmV0dXJucyAodWludCkgewogICAgLy8gVE9ETyAtIHJhdGUgZ2F0aGVyICYgbXNnLnZhbHVlIHRyYXZlbHM/CiAgICBDb21taXQoX2NvbW1pdCk7CiAgICB1aW50IGJhbGFuY2UgPSBHaXRhcmcuYmFsYW5jZU9mKF9jb21taXQpOwogICAgR2l0YXJnLnRyYW5zZmVyRnJvbShfY29tbWl0LCBhZGRyZXNzKHRoaXMpLCBiYWxhbmNlKTsKICAgIHJldHVybiBiYWxhbmNlOwogIH0KICAvLyBkcmFpbiBjb21taXRzIGluIGEgcmVwbyBhZnRlciBkb3duIGFsbG93IGlzIGNhbGxlZCAKICBmdW5jdGlvbiBkcmFpbih1aW50IHN0YXJ0LCB1aW50IGVuZCwgYWRkcmVzcyBfcmVwbykgcHVibGljIHBheWFibGUgcmV0dXJucyAodWludCkgewogICAgLy9mdW5jdGlvbiBxdWVyeShhZGRyZXNzIF9yZXBvLCB1aW50IHN0YXJ0LCB1aW50IGVuZCkgcHVibGljIHJldHVybnMgKFRpbWVbXSBtZW1vcnkpCiAgICBUaW1lW10gbWVtb3J5IHRpbWVzID0gcXVlcnkoX3JlcG8sIHN0YXJ0LCBlbmQpOwogICAgZm9yICh1aW50IGkgPSAwOyBpIDwgdGltZXMubGVuZ3RoOyBpKyspIHsKICAgICAgZHJhaW4odGltZXNbaV0uY29tbWl0KTsKICAgIH0KICAgIHJldHVybiBibG9jay50aW1lc3RhbXA7CiAgfQogIC8vIHF1ZXJ5IHZhbHVlIG9mIGNvbW1pdAogIGZ1bmN0aW9uIHZhbHVlKGFkZHJlc3MgX2NvbW1pdCkgcHVibGljIHZpZXcgcmV0dXJucyAodWludCkgewogICAgcmV0dXJuIEdpdGFyZy5iYWxhbmNlT2YoYWRkcmVzcyhDb21taXQoX2NvbW1pdCkpKTsKICB9CiAgLy8gcXVlcnkgY29tbWl0cyBieSByYW5nZSwgcmVwbyBvciB2YWx1ZQogIGZ1bmN0aW9uIHF1ZXJ5KGFkZHJlc3MgX3JlcG8sIHVpbnQgc3RhcnQsIHVpbnQgZW5kKSBwdWJsaWMgcmV0dXJucyAoVGltZVtdIG1lbW9yeSkgewogICAgVGltZVtdIG1lbW9yeSByZXBvID0gY29tbWl0c1tSZXBvKF9yZXBvKV07CiAgICBUaW1lW10gbWVtb3J5IF9jb21taXRzID0gbmV3IFRpbWVbXShyZXBvLmxlbmd0aCk7CiAgICB1aW50IGogPSAwOwogICAgZm9yICh1aW50IGkgPSAwOyBpIDwgcmVwby5sZW5ndGg7IGkrKykgewogICAgICBUaW1lIG1lbW9yeSB0aW1lID0gcmVwb1tpXTsKICAgICAgaWYgKHRpbWUudGltZXN0YW1wID49IHN0YXJ0ICYmIHRpbWUudGltZXN0YW1wIDw9IGVuZCkgewogICAgICAgIC8vIF9jb21taXRzLmxlbmd0aCBpcyAwIHdoZW4gaW5kZXggaXMgMCBmb3IgbGVuZ3RoIG9mIDAsIDEgd2hlbiBpbmRleCBpcyAxIGZvciB1bndyaXR0ZW4gc3BhY2UKICAgICAgICBfY29tbWl0c1srK2pdID0gdGltZTsKICAgICAgICBlbWl0IFZhbHVlKHRpbWUudGltZXN0YW1wKTsKICAgICAgICBlbWl0IENvbSh0aW1lLmNvbW1pdCk7CiAgICAgIH0KICAgIH0KICAgIHJldHVybiBfY29tbWl0czsgCiAgfQogIGZ1bmN0aW9uIHF1ZXJ5KGFkZHJlc3MgcmVwbykgcHVibGljIHZpZXcgcmV0dXJucyAoVGltZVtdIG1lbW9yeSkgewogICAgcmV0dXJuIGNvbW1pdHNbUmVwbyhyZXBvKV07CiAgfQogIGZ1bmN0aW9uIHF1ZXJ5KHVpbnQgX3ZhbHVlLCBhZGRyZXNzIF9yZXBvKSBwdWJsaWMgdmlldyByZXR1cm5zIChUaW1lW10gbWVtb3J5KSB7CiAgICBUaW1lW10gbWVtb3J5IHJlcG8gPSBjb21taXRzW1JlcG8oX3JlcG8pXTsKICAgIFRpbWVbXSBtZW1vcnkgX2NvbW1pdHMgPSBuZXcgVGltZVtdKHJlcG8ubGVuZ3RoKTsKICAgIGZvciAodWludCBpID0gMDsgaSA8IHJlcG8ubGVuZ3RoOyBpKyspIHsKICAgICAgaWYgKEdpdGFyZy5iYWxhbmNlT2YocmVwb1tpXS5jb21taXQpID09IF92YWx1ZSkgewogICAgICAgIF9jb21taXRzW2ldID0gcmVwb1tpXTsKICAgICAgfQogICAgfQogICAgcmV0dXJuIF9jb21taXRzOwogIH0KfQo=",
  "gitarg": "Ly8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IFVOTElDRU5TRUQKcHJhZ21hIHNvbGlkaXR5ID49IjAuOC4yMCI7Ci8vIEludGVuZGVkIHVzZTogZXhjaGFuZ2UgZm9yIHNlcnZpY2VzIG9uIGdpdGFyZyBkZWNlbnRyYWxpemVkIHBsYXRmb3JtIGFuZCBhZGEgTkZUcyAocmVsZWFzZSBkYXRlIEp1bmUgMm5kIC0gSnVuZSAxNXRoIDIwMjMpCi8vIE5JQ0UtVE8tSEFWRVM6IAovLyAqIGxvY2sgcGFzc3dvcmQgaW50ZXJmYWNlCi8vICogdW5sb2NrIHBhc3N3b3JkIGludGVyZmFjZQovLyAqIHRpbWVzdGFtcCBiYXNlZCBsb2Nrb3V0Cgpjb250cmFjdCBnaXRhcmcgewogIC8qc3RydWN0IFNwZW5kRG93biB7CiAgICBhZGRyZXNzIG93bmVyOwogICAgYWRkcmVzcyBzcGVuZGVyOwogICAgdWludDI1NiBhbW91bnQ7CiAgfSAqLwogIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBfZnJvbSwgYWRkcmVzcyBpbmRleGVkIF90bywgdWludDI1NiBfdmFsdWUpOwogIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBfb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpOwoKCiAgbWFwcGluZyhhZGRyZXNzID0+IG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikpIGFsbG93ZWQ7CgogIG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50MjU2KSBwcml2YXRlIGJhbGFuY2VzOwogIG1hcHBpbmcoYWRkcmVzcyA9PiBib29sKSBwcml2YXRlIGxvY2tlZDsKCiAgdWludDI1NiB0b3RhbFN1cHBseV8gPSAxMDAwIGV0aGVyOwoKICBjb25zdHJ1Y3RvcigpIHsKICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gdG90YWxTdXBwbHlfOwogIH0KICBmdW5jdGlvbiBsb2NrKCkgcHVibGljIHJldHVybnMgKGJvb2wpIHsKICAgIGxvY2tlZFttc2cuc2VuZGVyXSA9IHRydWU7CiAgICByZXR1cm4gbG9ja2VkW21zZy5zZW5kZXJdOwogIH0KICBmdW5jdGlvbiB1bmxvY2soKSBwdWJsaWMgcmV0dXJucyAoYm9vbCkgewogICAgbG9ja2VkW21zZy5zZW5kZXJdID0gZmFsc2U7CiAgICByZXR1cm4gbG9ja2VkW21zZy5zZW5kZXJdOwogIH0KCiAgLy8gSUNPIEVSQy0yMCBzdGFuZGFyZCBmdW5jdGlvbnMKCiAgLy9odHRwczovL2VpcHMuZXRoZXJldW0ub3JnL0VJUFMvZWlwLTIwI25hbWUKICAvLyBmdW5jdGlvbiBkZWZpbml0aW9uIGNhbiBiZSBjaGFuZ2VkIHRvIHB1cmUgLSBub3QgaW4gc3RhbmRhcmQKICBmdW5jdGlvbiBuYW1lKCkgcHVibGljIHB1cmUgcmV0dXJucyAoc3RyaW5nIG1lbW9yeSkgewogICAgcmV0dXJuICJnaXRhcmciOyAgCiAgfQogIC8vaHR0cHM6Ly9laXBzLmV0aGVyZXVtLm9yZy9FSVBTL2VpcC0yMCNzeW1ib2wKICAvLyBmdW5jdGlvbiBkZWZpbml0aW9uIGNhbiBiZSBjaGFuZ2VkIHRvIHB1cmUgLSBub3QgaW4gc3RhbmRhcmQKICBmdW5jdGlvbiBzeW1ib2woKSBwdWJsaWMgcHVyZSByZXR1cm5zIChzdHJpbmcgbWVtb3J5KSB7CiAgICByZXR1cm4gIkdJVCI7CiAgfQogIC8vaHR0cHM6Ly9laXBzLmV0aGVyZXVtLm9yZy9FSVBTL2VpcC0yMCNkZWNpbWFscwogIC8vIGZ1bmN0aW9uIGRlZmluaXRpb24gY2FuIGJlIGNoYW5nZWQgdG8gcHVyZSAtIG5vdCBpbiBzdGFuZGFyZAogIGZ1bmN0aW9uIGRlY2ltYWxzKCkgcHVibGljIHB1cmUgcmV0dXJucyAodWludDgpIHsKICAgIHJldHVybiA2OwogIH0KICAvL2h0dHBzOi8vZWlwcy5ldGhlcmV1bS5vcmcvRUlQUy9laXAtMjAjZGVjaW1hbHMKICAvLyBmdW5jdGlvbiBkZWZpbml0aW9uIGNhbiBiZSBjaGFuZ2VkIHRvIHB1cmUgLSBub3QgaW4gc3RhbmRhcmQKICBmdW5jdGlvbiB0b3RhbFN1cHBseSgpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYpIHsKICAgIHJldHVybiB0b3RhbFN1cHBseV87CiAgfQogIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgcHVibGljIHZpZXcgcmV0dXJucyAodWludDI1NiBiYWxhbmNlKSB7CiAgICByZXF1aXJlKCFsb2NrZWRbbXNnLnNlbmRlcl0gJiYgIWxvY2tlZFtfb3duZXJdKTsKICAgIHJldHVybiBiYWxhbmNlc1tfb3duZXJdOwogIH0KICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHB1YmxpYyByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsKICAgIHJlcXVpcmUoIWxvY2tlZFttc2cuc2VuZGVyXSAmJiAhbG9ja2VkW190b10pOwogICAgcmVxdWlyZShfdmFsdWUgPD0gYmFsYW5jZXNbbXNnLnNlbmRlcl0pOwogICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSBiYWxhbmNlc1ttc2cuc2VuZGVyXSAtIF92YWx1ZTsKICAgIGJhbGFuY2VzW190b10gPSBiYWxhbmNlc1tfdG9dICsgX3ZhbHVlOwogICAgZW1pdCBUcmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF92YWx1ZSk7CiAgICByZXR1cm4gdHJ1ZTsKICB9CiAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgcmVxdWlyZSghbG9ja2VkW21zZy5zZW5kZXJdICYmICFsb2NrZWRbX2Zyb21dICYmICFsb2NrZWRbX3RvXSk7CiAgICByZXF1aXJlKF92YWx1ZSA8PSBiYWxhbmNlc1tfZnJvbV0pOwogICAgcmVxdWlyZShfdmFsdWUgPD0gYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0pOwogICAgYmFsYW5jZXNbX2Zyb21dID0gYmFsYW5jZXNbX2Zyb21dIC0gX3ZhbHVlOwogICAgYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gPSBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSAtIF92YWx1ZTsKICAgIC8vIF90byBzaG91bGQgdGhlbiBiZSBtZXNzYWdlIHNlbmRlcgogICAgYmFsYW5jZXNbX3RvXSA9IGJhbGFuY2VzW190b10gKyBfdmFsdWU7CiAgICBlbWl0IFRyYW5zZmVyKF9mcm9tLCBfdG8sIF92YWx1ZSk7CiAgICByZXR1cm4gdHJ1ZTsKICB9CiAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgcHVibGljIHJldHVybnMgKGJvb2wgc3VjY2VzcykgewogICAgcmVxdWlyZSghbG9ja2VkW21zZy5zZW5kZXJdICYmICFsb2NrZWRbX3NwZW5kZXJdKTsKICAgIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX3ZhbHVlOwogICAgZW1pdCBBcHByb3ZhbChtc2cuc2VuZGVyLCBfc3BlbmRlciwgX3ZhbHVlKTsKICAgIHJldHVybiB0cnVlOwogIH0KICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYgcmVtYWluaW5nKSB7CiAgICAvLyBTVFlMRUVFCiAgICAvL2ZvciAodWludCBpID0gMDsgaSA8IHNwZW5kRG93bkZ1bmRzLmxlbmd0aDsgaSsrKSB7CiAgICAgLy8gaWYgKHNwZW5kRG93bkZ1bmRzW2ldLnNwZW5kZXIgPT0gX3NwZW5kZXIgJiYgc3BlbmREb3duRnVuZHNbaV0ub3duZXIgPT0gX293bmVyKSB7CiAgICAgIC8vICByZXR1cm4gc3BlbmREb3duRnVuZHNbaV0uYW1vdW50OwogICAgICAvL30KICAgIC8vfQogICAgcmVxdWlyZSghbG9ja2VkW21zZy5zZW5kZXJdICYmICFsb2NrZWRbX293bmVyXSAmJiAhbG9ja2VkW19zcGVuZGVyXSk7CiAgICByZXR1cm4gYWxsb3dlZFtfb3duZXJdW19zcGVuZGVyXTsKICB9Cn0K"
}